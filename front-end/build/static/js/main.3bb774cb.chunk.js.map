{"version":3,"sources":["img/asb.png","Resume.js","Portfolio.js","startUpText.js","SeeSoundCallout.js","Bot.js","Activity.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Resume","react_default","a","createElement","Fragment","Portfolio","target","rel","href","startUpText","SeeSoundCallout","className","Bot","bot","_bot$fullProfile","fullProfile","name","photos","bio","birth_date","pos_info","concat","city","state","map","photo","alt","src","url","Match","match","person","messages","harassmentScore","botTinderId","botName","timeSortedMessages","sort","b","moment","sent_date","length","slice","message","from","Activity","account","_matches","Activity_Match","Object","assign","key","_id","Date","server","App","text","typeBox","botMakerStep","facebookAccount","facebookPassword","loadingText","loadingTextVisibility","toggleLoadingText","_loop","i","x","setTimeout","_this","setState","typewriter","displayBoot","startUpArray","split","forEach","lineOfText","toConsumableArray","chatBox","scrollIntoView","src_SeeSoundCallout","handleTextChange","event","value","handleSubmit","preventDefault","submitMessageToServer","handleKeyPress","botCreator","_callee","response","resText","regenerator_default","wrap","_context","prev","next","axios","post","sent","data","src_Resume","src_Portfolio","botFetcher","t0","console","error","stop","this","_callee2","type","_context2","result","accounts","get","src_Bot","src_Activity","_callee3","_context3","abrupt","trim","log","finish","_this2","_this3","asb","id","toString","style","visibility","onSubmit","onKeyPress","onChange","rows","ref","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3bb774cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/asb.18a802fe.png\";","import React from \"react\";\n\nconst Resume = () => {\n  return <>\n  <p>AARON STACK</p>\n  <p>A full-stack software engineer who designs for the end user</p>\n  <p>Brooklyn, NY</p>\n  <p>(917) 748-2350</p>\n  <p>www.aarongstack.com</p>\n  <p>aarongstack@gmail.com</p>\n  <p>linkedin.com/in/aaron-stack/</p>\n  <p>github.com/AaronStackBarnes</p>\n  <br/>\n  <br/>\n  <p>RELEVANT EXPERIENCE</p>\n  <br/>\n  <p>AREA 23, NY — Developer</p>\n  <p>MARCH 2018 - PRESENT</p>\n  <p>Oversees multiple full stack development initiatives to drive the technological innovation for a global marketing agency.  Partners with the marketing team to develop and maintain websites for large pharmaceutical clients, including Eagle-Bendamustine, NTM Facts, and About NTM, and includes launching the agency’s first ReactJS, React Native and Polymer websites. Selected to oversee Special Projects, leading the development of prototypes for: a system of sharing and storing medical records on the Ethereum Blockchain, a web-based 360 video training system for doctors, and integrations of the Web Speech API and PHP.</p>\n  <br/>\n  <p>Project Highlight: Created the Get Up Alarm Clock so that cancer patients could wake up to words of encouragement from friends and loved ones.</p>\n  <p>User logs into administrative portal built in ReactJS to set alarm times and other configuration settings</p>\n  <p>The site uses the Web Bluetooth API to connect to the Alarm Clock, powered by a Raspberry Pi3 to receive the data via a custom-built GATT Server/Bluetooth, and Node server</p>\n  <p>Once the alarm is detected, the Pi using GPIO pins powers up an attached projector and makes multiple calls to the Twitter API to fetch the user’s private messages and other details</p>\n  <p>Data is displayed on the projector, styled in the appearance of public tweets</p>\n  <br/>\n  <p>DOG PARKER, NY — Junior Full Stack Developer</p>\n  <p>SEPTEMBER 2017 - MARCH 2018</p>\n  <p>Developed key features and provided overall maintenance of website, mobile application, and physical infrastructure of the Dog Parker system.  Accomplishments include: leading complete redesign of administrator portal, developing various sign up flows specific to user’s platform, and building remote monitoring and system configuration for modems and Raspberry Pis.</p>\n  <br/>\n  <p>Project Highlight: Developed capability to start remote house sessions:</p>\n  <p>Administrator uses custom directive and data service built in AngularJS to initiate remote start, hitting routes built in Node/Express (auth using JWT and testing with Mocha) and logging events in MongoDB and Mongoose</p>\n  <p>Server initiates “handshake” to confirm connectivity with the individual houses using Microsoft’s IoT hub service</p>\n  <p>Upon success, starts new session flow in the house-level Debian environment, using javascript and bash commands to coordinate streaming video, UV scanner, speaker, microphone, lights, and air conditioning</p>\n  <p>Uses Firebase to provide real-time status updates on the Admin Portal and alert users of remote activity via custom screens displayed on the mobile App (built with AngularJS and GoNative.IO wrapper)</p>\n  <br/>\n  <p>GABRIEL FILMS (PROJECT Y), NY — Full Stack Developer </p>\n  <p>APRIL 2016 - PRESENT</p>\n  <p>Develop and maintain React Native application for a global not-for-profit men’s health initiative, allowing users to ask questions and seek information from professionals on sensitive health topics from their phone.  Additionally built Wordpress templates, implemented chat and live stream functionality for 2017 World Vasectomy Day event, and provide general website maintenance.</p>\n  <br/>\n  <p>SQN SECURITIES, NY — Business Development </p>\n  <p>MAY 2012 - JUNE 2017</p>\n  <p>Improved overall management of sales leads and contacts by managing the implementation of Salesforce and later integrating Salesforce with a custom-built Ruby and SQL backup system to dynamically assign Salesforce IDs.  Reduced overall shipping costs by 25% by creating an inventory management and order request system.  Decreased capital deployment time by developing a pipeline forecasting system that analyzed past investments and sales team activity to predict future investments. Increased email open rates by 11% by monitoring trends in sales team email activity. Improved utilization of external sales staff through a contact mapping system.</p>\n  <br/>\n  <br/>\n  <p>TECHNOLOGIES</p>\n  <p>Angular 2, AngularJS, Axios, Bcrypt, Belmont, Debian GNU/Linux, Django, Firebase, GoNative.io, Jasmine, Javascript, Jest, JWT, MATLAB, Microsoft Azure, IOT Hub, Mocha, MongoDB, Mongoose, Ng-admin, Node, Numpy, PHP, PM2, Polymer, Python, React Native, ReactJS, ReactVR, Ruby, Ruby on Rails, TensorFlow, TensorFlowJS</p>\n  <br/>\n  <p>KEY PROJECTS</p>\n  <p>Migraine Friendly Internet, A Chrome Browser plug in designed to make the internet better for sufferers of migraine.  Users have the option to change the coloration and spacing of all websites as well as blocking all advertisements and media autoplay.</p>\n  <p>Social Metadata Management System (PHP), a simple system built to make social media sites display correct  information for shared content. It is prodmomentianly used to send OG information for videos and jump links.</p>\n  <p>The City I Love, a site built with React Native  and accompanying guide written and developed for beginners learning VR.</p>\n  <p>Game of React Redux, a tutorial and demo accompaniment to  a talk I gave teaching a React Redux design pattern (originated by the Dan Abramov To Do MVC example).</p>\n  <br/>\n  <p>EDUCATION</p>\n  <p>Full Stack Developer Intensive - Dev Bootcamp, NY</p>\n  <p>MBA, HR Information Systems - University at Albany, NY</p>\n  <p>BA, Economics - University at Albany, NY</p>\n  <p>BA, Chinese - University at Albany, NY</p>\n  </>\n}\n\nexport default Resume\n","import React from \"react\";\n\nconst Portfolio = () => {\n  return <>\n    <p>I am very lucky I have gotten to work on a bunch of cool things.</p> \n    <br/>\n    <p>For mobile and IOT check out Dog Parker (its also a pretty damn cool bussiness):\n    <br/>\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href= \"https://dogparker.com/\">WEB</a>\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href= \"https://play.google.com/store/apps/details?id=com.dogparker.app&hl=en_US\">ANDROID</a>\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href= \"https://itunes.apple.com/ca/app/dog-parker/id1151350607?mt=8\">IOS</a>\n    <br/>\n    <br/>  \n    I also wrote this for getting twitter on a smart mirror: <br/>\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href= \"https://github.com/AaronStackBarnes/twitter-bot\">REPO</a></p>\n    <br/> \n    <p>To see some front-end stuff that I have worked on for clients, in production, check out:\n    <br/> \n    <a target=\"_blank\" rel=\"noopener noreferrer\" href= \"https://www.eagle-bendamustine.com\">EAGLE</a> <a target=\"_blank\" rel=\"noopener noreferrer\" href= \"https://www.ntmfacts.com/\">NTM HCP</a> <a target=\"_blank\" rel=\"noopener noreferrer\" href= \"https://www.aboutntm.com/\">NTM DTC</a></p> \n    <br/> \n    <p>To see something built in web components and the web-speech api checkout this (the Web Speech API is currently only supported on chrome): \n    <br/> \n    <a target=\"_blank\" rel=\"noopener noreferrer\" href= \"https://speech-to-text-demo-705c9.firebaseapp.com/web-speech-api\">DEMO</a></p>\n  </>\n}\n\nexport default Portfolio\n","const startUpText = `Uncompressing Linux... done, booting the kernel.\n[    0.000000] Booting Linux on physical CPU 0x0\n[    0.000000] Initializing cgroup subsys cpu\n[    0.000000] Initializing cgroup subsys cpuacct\n[    0.000000] Linux version 3.18.10+ (dc4@dc4-XPS13-9333) (gcc version 4.8.3 20140303 (prerelease) (crosstool-NG linaro-1.13.1+bzr2650 - Linaro GCC 2014.03)) #775 PREEMPT Thu Apr 2 18:10:12 BST 2015\n[    0.000000] SLUB: HWalign=32, Order=0-3, MinObjects=0, CPUs=1, Nodes=1\n[    0.000000] Preemptible hierarchical RCU implementation.\n[    0.000000] NR_IRQS:522\n[    0.000027] sched_clock: 32 bits at 1000kHz, resolution 1000ns, wraps every 2147483648000ns\n[    0.000077] Switching to timer-based delay loop, resolution 1000ns\n[    0.000359] Console: colour dummy device 80x30\n[    0.001422] console [tty1] enabled\n[    0.001469] Calibrating delay loop (skipped), value calculated using timer frequency.. 2.00 BogoMIPS (lpj=10000)\n[    0.001545] pid_max: default: 32768 minimum: 301\n[    0.001931] Mount-cache hash table entries: 1024 (order: 0, 4096 bytes)\n[    0.001997] Mountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes)\n[    0.003000] Initializing cgroup subsys memory\n[    0.003093] Initializing cgroup subsys devices\n[    0.003151] Initializing cgroup subsys freezer\n[    0.003204] Initializing cgroup subsys net_cls\n[    0.003254] Initializing cgroup subsys blkio\n[    0.003377] CPU: Testing write buffer coherency: ok\n[    0.003498] ftrace: allocating 19229 entries in 57 pages\n[    0.107319] Setting up static identity map for 0x553698 - 0x5536d0\n[    0.110174] devtmpfs: initialized\n[    0.127357] VFP support v0.3: implementor 41 architecture 1 part 20 variant b rev 5\n[    0.130404] pinctrl core: initialized pinctrl subsystem\n[    0.133123] NET: Registered protocol family 16\n[    0.138594] DMA: preallocated 4096 KiB pool for atomic coherent allocations\n[    0.139999] bcm2708.uart_clock = 3000000\n[    0.142890] No ATAGs?\n[    0.142954] hw-breakpoint: found 6 breakpoint and 1 watchpoint registers.\n[    0.143016] hw-breakpoint: maximum watchpoint size is 4 bytes.\n[    0.143083] mailbox: Broadcom VideoCore Mailbox driver\n[    0.143245] bcm2708_vcio: mailbox at f200b880\n[    0.143703] bcm_power: Broadcom power driver\n[    0.143761] bcm_power_open() -> 0\n[    0.143791] bcm_power_request(0, 8)\n[    0.644504] bcm_mailbox_read -> 00000080, 0\n[    0.644551] bcm_power_request -> 0\n[    0.644761] Serial: AMBA PL011 UART driver\n[    0.645001] dev:f1: ttyAMA0 at MMIO 0x20201000 (irq = 83, base_baud = 0) is a PL011 rev3\n[    1.026171] console [ttyAMA0] enabled\n[    1.089428] SCSI subsystem initialized\n[    1.093582] usbcore: registered new interface driver usbfs\n[    1.099370] usbcore: registered new interface driver hub\n[    1.104873] usbcore: registered new device driver usb\n[    1.112045] Switched to clocksource stc\n[    1.144472] FS-Cache: Loaded\n[    1.147792] CacheFiles: Loaded\n[    1.167352] NET: Registered protocol family 2\n[    1.173329] TCP established hash table entries: 2048 (order: 1, 8192 bytes)\n[    1.180389] TCP bind hash table entries: 2048 (order: 1, 8192 bytes)\n[    1.187044] TCP: Hash tables configured (established 2048 bind 2048)\n[    1.193567] TCP: reno registered\n[    1.196842] UDP hash table entries: 256 (order: 0, 4096 bytes)\n[    1.202767] UDP-Lite hash table entries: 256 (order: 0, 4096 bytes)\n[    1.209433] NET: Registered protocol family 1\n[    1.214527] RPC: Registered named UNIX socket transport module.\n[    1.220497] RPC: Registered udp transport module.\n[    1.225329] RPC: Registered tcp transport module.\n[    1.230060] RPC: Registered tcp NFSv4.1 backchannel transport module.\n[    1.237793] bcm2708_dma: DMA manager at f2007000\n[    1.242844] vc-mem: phys_addr:0x00000000 mem_base=0x0ec00000 mem_size:0x10000000(256 MiB)\n[    1.252677] futex hash table entries: 256 (order: -1, 3072 bytes)\n[    1.258959] audit: initializing netlink subsys (disabled)\n[    1.264643] audit: type=2000 audit(1.030:1): initialized\n[    1.285511] VFS: Disk quotas dquot_6.5.2\n[    1.289878] Dquot-cache hash table entries: 1024 (order 0, 4096 bytes)\n[    1.299414] FS-Cache: Netfs 'nfs' registered for caching\n[    1.306594] NFS: Registering the id_resolver key type\n[    1.311766] Key type id_resolver registered\n[    1.316111] Key type id_legacy registered\n[    1.321553] msgmni has been set to 362\n[    1.327984] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 252)\n[    1.336007] io scheduler noop registered\n[    1.339992] io scheduler deadline registered (default)\n[    1.345764] io scheduler cfq registered\n[    1.352388] BCM2708FB: allocated DMA memory 4bc00000\n[    1.357459] BCM2708FB: allocated DMA channel 0 @ f2007000\n[    1.368051] Console: switching to colour frame buffer device 82x26\n[    1.379949] bcm2708-dmaengine bcm2708-dmaengine: Load BCM2835 DMA engine driver\n[    1.389642] uart-pl011 dev:f1: no DMA platform data\n[    1.397092] vc-cma: Videocore CMA driver\n[    1.402834] vc-cma: vc_cma_base      = 0x00000000\n[    1.409145] vc-cma: vc_cma_size      = 0x00000000 (0 MiB)\n[    1.416205] vc-cma: vc_cma_initial   = 0x00000000 (0 MiB)\n[    1.436395] brd: module loaded\n[    1.448019] loop: module loaded\n[    1.453297] vchiq: vchiq_init_state: slot_zero = 0xcb800000, is_master = 0\n[    1.462740] Loading iSCSI transport class v2.0-870.\n[    1.470905] usbcore: registered new interface driver smsc95xx\n[    1.478580] dwc_otg: version 3.00a 10-AUG-2012 (platform bus)\n[    1.686340] Core Release: 2.80a\n[    1.691076] Setting default values for core params\n[    1.697475] Finished setting default values for core params\n[    1.904796] Using Buffer DMA mode\n[    1.909665] Periodic Transfer Interrupt Enhancement - disabled\n[    1.917086] Multiprocessor Interrupt Enhancement - disabled\n[    1.924277] OTG VER PARAM: 0, OTG VER FLAG: 0\n[    1.930218] Dedicated Tx FIFOs mode\n[    1.935666] WARN::dwc_otg_hcd_init:1047: FIQ DMA bounce buffers: virt = 0xcbc14000 dma = 0x4bc14000 len=9024\n[    1.948724] FIQ FSM acceleration enabled for :\n[    3.174835] smsc95xx v1.0.4\n[    3.260006] smsc95xx 1-1.1:1.0 eth0: register 'smsc95xx' at usb-bcm2708_usb-1.1, smsc95xx USB 2.0 Ethernet, b8:27:eb:1c:b9:61\n[    4.220552] udevd[159]: starting version 175\n[   10.386572] EXT4-fs (mmcblk0p2): re-mounted. Opts: (null)\n[   10.867335] EXT4-fs (mmcblk0p2): re-mounted. Opts: (null)\n[   11.810617] random: nonblocking pool is initialized\n[   11.849114] Driver for 1-wire Dallas network protocol.\n[   12.167722] i2c /dev entries driver`;\n\nexport default startUpText;\n","import React from \"react\";\n\nconst SeeSoundCallout = () => {\n  return (\n    <div className=\"callout\">\n      <p>\n        Cannes Innovation Grand Prix:{\" \"}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://see-sound.com/\"\n        >\n          See Sound\n        </a>\n      </p>\n      <p>\n        Cannes Mobile Gold:{\" \"}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://see-sound.com/\"\n        >\n          See Sound\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport default SeeSoundCallout;\n","import React from \"react\";\n\nconst Bot = bot => {\n  let { name, photos, bio, birth_date, pos_info } = bot.fullProfile;\n  return (\n    <div>\n      <p>Name: {name}</p>\n      <p>Bio: {bio}</p>\n      <p>Birth Date: {birth_date}</p>\n      <p>Location: {`${pos_info.city.name} ${pos_info.state.name}`}</p>\n      {photos.map(photo => (\n        <img alt=\"bot profile\" className=\"profilePic\" src={photo.url} />\n      ))}\n    </div>\n  );\n};\n\nexport default Bot;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Match = match => {\n  let { person, messages, harassmentScore, botTinderId, botName } = match;\n  let { name, bio, photos } = person;\n\n  let timeSortedMessages = messages.sort(\n    (a, b) => moment(a.sent_date) - moment(b.sent_date)\n  );\n\n  if (photos && photos.length && photos.length > 3) {\n    photos = photos.slice(0, 3);\n  }\n\n  return (\n    <div className=\"match\">\n      <p>Name: {name}</p>\n      <p>bio: {bio}</p>\n      <p>harassmentScore: {harassmentScore}</p>\n      {photos.map(photo => (\n        <img alt=\"bot profile\" className=\"profilePic\" src={photo.url} />\n      ))}\n      <div className=\"messageBox\">\n        {timeSortedMessages.map(message => (\n          <p>{`${message.from === botTinderId ? botName : name}: ${\n            message.message\n          }`}</p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst Activity = account =>\n  account._matches.map(match => {\n    match.botName = account.fullProfile.name;\n    return <Match key={`${match._id}_${+new Date()}`} {...match} />;\n  });\n\nexport default Activity;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Resume from \"./Resume\";\nimport Portfolio from \"./Portfolio\";\nimport startUpText from \"./startUpText\";\nimport SeeSoundCallout from \"./SeeSoundCallout\";\nimport Bot from \"./Bot\";\nimport Activity from \"./Activity\";\nimport asb from \"./img/asb.png\";\nimport \"./App.css\";\n\nconst server = \"https://aaron-stack.herokuapp.com\";\n// const server = \"http://localhost:3030\";\n\nclass App extends Component {\n  state = {\n    text: \"\",\n    typeBox: \"\",\n    botMakerStep: 0,\n    facebookAccount: \"\",\n    facebookPassword: \"\",\n    messages: [],\n    loadingText: \"Initializing AI\",\n    loadingTextVisibility: \"hidden\"\n  };\n\n  componentDidMount() {\n    this.toggleLoadingText();\n    setTimeout(() => {\n      this.displayBoot();\n    }, 5000);\n  }\n\n  toggleLoadingText = () => {\n    let interval = 500;\n    for (let i = 0; i <= 10; i++) {\n      (x => {\n        setTimeout(() => {\n          this.setState({\n            loadingTextVisibility:\n              this.state.loadingTextVisibility === \"hidden\"\n                ? \"visible\"\n                : \"hidden\"\n          });\n\n          if (x === 4) {\n            this.setState({\n              loadingText: \"Connected to System Intelligence\"\n            });\n          } else if (x === 8) {\n            this.setState({\n              loadingText: \"Please Hold\"\n            });\n          }\n        }, i * interval);\n      })(i);\n    }\n\n    setTimeout(() => {\n      this.setState({\n        loadingText: \"Loaded. Thanks for scrolling back up.\"\n      });\n      this.typewriter(\"Well are you going to say hello...\");\n    }, 11000);\n  };\n\n  displayBoot = () => {\n    let startUpArray = startUpText.split(\"[\");\n    let interval = 20;\n    startUpArray.forEach((lineOfText, i) => {\n      setTimeout(() => {\n        this.setState({\n          messages: [...this.state.messages, <p key={i}>[{lineOfText}</p>]\n        });\n\n        this.chatBox.scrollIntoView();\n      }, i * interval);\n    });\n\n    setTimeout(() => {\n      this.setState({\n        messages: [\n          ...this.state.messages,\n          <SeeSoundCallout key={startUpArray.length} />\n        ]\n      });\n      this.chatBox.scrollIntoView();\n    }, startUpArray.length * interval);\n  };\n\n  handleTextChange = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (!this.state.text) {\n      return;\n    }\n\n    this.submitMessageToServer(this.state.text);\n\n    this.setState({\n      messages: [\n        ...this.state.messages,\n        <p key={+new Date()}> >> {this.state.text}</p>\n      ],\n      text: \"\"\n    });\n  };\n\n  handleKeyPress = event => {\n    if (event.key === \"Enter\" && this.state.botMakerStep === 0) {\n      this.handleSubmit(event);\n    } else if (event.key === \"Enter\") {\n      this.botCreator();\n    }\n  };\n\n  submitMessageToServer = async message => {\n    try {\n      const response = await axios.post(server + \"/messages\", {\n        text: message\n      });\n\n      let resText = response.data.text;\n\n      if (resText === \"resume\") {\n        this.setState({\n          messages: [...this.state.messages, <Resume />]\n        });\n      } else if (resText === \"portfolio\") {\n        this.setState({\n          messages: [...this.state.messages, <Portfolio />]\n        });\n      } else if (resText === \"getBots\") {\n        this.botFetcher(\"getBots\");\n      } else if (resText === \"activitiesGet\") {\n        this.botFetcher(\"activities\");\n      } else if (resText === \"postBot\") {\n        this.setState({ botMakerStep: 1 }, this.botCreator);\n      } else {\n        this.typewriter(resText);\n        this.chatBox.scrollIntoView();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  botFetcher = async type => {\n    let response;\n    if (\n      response &&\n      type === \"getBots\" &&\n      response.data &&\n      response.data.result &&\n      response.data.result.accounts\n    ) {\n      response = await axios.get(server + \"/bots\");\n\n      this.setState({\n        messages: [\n          ...this.state.messages,\n          ...response.data.result.accounts.map((account, i) => (\n            <Bot key={`${account._id}_${+new Date()}`} {...account} />\n          ))\n        ]\n      });\n    }\n\n    if (\n      response &&\n      type === \"activities\" &&\n      response.data &&\n      response.data.result &&\n      response.data.result.accounts\n    ) {\n      response = await axios.get(server + \"/matches\");\n      this.setState({\n        messages: [\n          ...this.state.messages,\n          ...response.data.result.accounts.map((account, i) => (\n            <Activity key={`${account._id}_${+new Date()}`} {...account} />\n          ))\n        ]\n      });\n    }\n  };\n\n  botCreator = async () => {\n    if (this.state.botMakerStep === 1) {\n      this.setState({ botMakerStep: 2 });\n      this.typewriter(\"please enter bot facebook email\");\n      this.chatBox.scrollIntoView();\n    } else if (this.state.botMakerStep === 2) {\n      if (!this.state.text) {\n        return;\n      }\n      this.setState({\n        facebookAccount: this.state.text,\n        text: \"\",\n        botMakerStep: 3\n      });\n      this.typewriter(this.state.text);\n      this.typewriter(\"please enter bot facebook password\");\n      this.chatBox.scrollIntoView();\n    } else if (this.state.botMakerStep === 3) {\n      this.setState(\n        {\n          facebookPassword: this.state.text,\n          text: \"\",\n          botMakerStep: 4\n        },\n        this.botCreator\n      );\n      this.typewriter(this.state.text);\n      this.typewriter(\"attempting to create bot\");\n      this.chatBox.scrollIntoView();\n    } else if (this.state.botMakerStep === 4) {\n      this.typewriter(\n        `curl -X {email: ${this.state.facebookAccount.trim()} password: ${this.state.facebookPassword.trim()}}`\n      );\n      this.chatBox.scrollIntoView();\n      try {\n        let response = await axios.post(server + \"/bots\", {\n          facebookAccount: this.state.facebookAccount.trim(),\n          facebookPassword: this.state.facebookPassword.trim()\n        });\n        console.log(response);\n      } catch (e) {\n        console.error(e);\n      } finally {\n        this.setState({\n          facebookAccount: \"\",\n          facebookPassword: \"\",\n          text: \"\",\n          botMakerStep: 0\n        });\n      }\n    }\n  };\n\n  typewriter = text => {\n    let i = 0;\n    let speed = 15;\n    let message = `[AM] ${text}`;\n\n    let type = () => {\n      if (i < message.length) {\n        this.setState({ typeBox: this.state.typeBox + message[i] });\n        i++;\n        setTimeout(type, speed);\n      } else {\n        this.setState({\n          messages: [\n            ...this.state.messages,\n            <p key={+new Date()}>{message}</p>\n          ],\n          typeBox: \"\"\n        });\n      }\n    };\n    type();\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"overlay\" />\n        <div className=\"scanline\" />\n        <div className=\"wrapper\">\n          <div className=\"content clearfix\">\n            <header className=\"site clearfix\">\n              <img src={asb} alt=\"ASB ACII\" id=\"logo-v\" />\n              <h4>Full Stack Solutions (MM)</h4>\n              <p>----------------------------------------</p>\n              <p>TERMINAL v 4.0.0</p>\n              <p>{new Date().toString()}</p>\n              <p style={{ visibility: this.state.loadingTextVisibility }}>\n                - {this.state.loadingText} -\n              </p>\n            </header>\n\n            <p>The Allied Master Computer (AM) - INIT INTELLIGENCE</p>\n            <p>System Administrator (SYSADM) - Bot Name: {+new Date()}</p>\n\n            <p className=\"clear\">\n              <br />\n            </p>\n\n            {this.state.messages}\n            <p>{this.state.typeBox}</p>\n            <form onSubmit={this.handleSubmit}>\n              <label>Message >></label>\n              <textarea\n                onKeyPress={this.handleKeyPress}\n                value={this.state.text}\n                onChange={this.handleTextChange}\n                id=\"text\"\n                rows=\"1\"\n              />\n              <br />\n              <br />\n              <br />\n              <input\n                ref={chatBox => {\n                  this.chatBox = chatBox;\n                }}\n                type=\"submit\"\n                value=\"Submit\"\n              />\n            </form>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}